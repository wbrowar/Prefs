# BASIC SHELL ALIASES
alias ali='cat ~/.alias'
alias lsd='ls -Gl | grep "^d"'
alias lsort='echo "========== Newest ==========" && ls -At1 && echo "========== Oldest =========="'
alias reload="source ~/.bash_profile && clear"
alias cd..="cd .."
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."


# APPS
alias safari="open -a Safari http://dixonschwabl.com/"
alias chrome="open -a Google\ Chrome http://dixonschwabl.com/"

# GIT
alias gita="git add -A"
alias gits="git status"
alias gitrm="git rm --cached -r . -f"
alias gitir="git rm --cached -r . && git add ."

# GIT DOWN – Pull and check status of repo
gitd() {
	git pull && gits;
}

# GIT UP – Commit with a message and push to current branch
# syntax:
# gitu "[commit message]"
gitu() {
	gitd;
	git add -A && git commit -m "$1" && git push && git status;
}

# GIT CHECKOUT – Checkout git branch
# syntax:
# gitch [branch]
gitch() {
	git checkout $1;
}

# GIT RELEASE – Pull, tag (with version and message), then commit and push to current branch
# syntax:
# gitr "[commit message]" [version number] "[version message (optional)]"
# example:
# gitr "Version 1.1" 1.1.0 "Launching new feature"
gitr() {
	gitu "$1";
	if [ ! -z "$3" ]; then
		git tag -a $2 -m "$3";
	else
		git tag -a $2 -m "$1";
	fi
	git push --follow-tags;
}


# MAC SPECIFIC
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"
alias showdotfiles="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hidedotfiles="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
alias showdeskicons="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
alias hidedeskicons="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias lock='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'
alias ss='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine'

notify() {
	osascript -e "display notification \"$2\" with title \"$1\"";
}


# NPM
alias comp="npm run component"
alias cssd="npm run cssd"
alias cssdb="npm run cssdb"
alias dev="npm run dev"
alias prod="npm run prod"
alias pub="npm run pub"
alias pubd="npm run pubd"
alias start="npm run start"
alias update="npm run update"
alias watch="npm run watch"


alias list="npm run list"
alias setup="npm run setup"


# WEBSITE SHORTCUTS
# SITE RELEASE – change version number, run grunt release, then commit all changes and tag release
# syntax:
# siter "[commit message]" [version number] "[version message (optional)]"
# example:
# siter "Version 1.1" 1.1.0 "Launching new feature"
siter() {
	npm run prod;
	if [ ! -z "$3" ]; then
		gitr "$1" $2 "$3";
	else
		gitr "$1" $2 "$1";
	fi
	notify "SITE RELEASE" "Version $2 released!"
}