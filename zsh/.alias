# BASIC SHELL ALIASES
alias ali='cat ~/.alias'
alias lsd='ls -Gl | grep "^d"'
alias lsort='echo "========== Newest ==========" && ls -At1 && echo "========== Oldest =========="'
alias reload="source ~/.bash_profile && clear"
alias cd..="cd .."
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."


# COMPOSER
composerrun() {
  if [[ -d .ddev  ]]; then
    ddev composer "$1"
  else
    composer "$1"
  fi
}

alias cssd="composerrun cssd"
alias cssdb="composerrun cssdb"
alias sync="composerrun sync"


# GIT
alias gita="git add -A"
alias gits="git status"
alias gitrm="git rm --cached -r . -f"
alias gitir="git rm --cached -r . && git add ."


# PACKAGE SCRIPTS
alias build="packagerun build"
alias comp="packagerun component"
alias dev="packagerun dev"
alias e2e="packagerun test:e2e"
alias prod="packagerun prod"
alias new="packagerun new"
alias setup="packagerun setup"
alias start="packagerun start"
alias test="packagerun test"
alias unit="packagerun test:unit"
alias update="packagerun update"
alias watch="packagerun watch"

# NOTE: using "${SCRIPT_RUNNER[@]}" stores command and arguments into an array
# and evaluates each item in the array in order (just like when you set the command)
packagerun() {
  # Set node version command
  if [[ -f $HOME/.nvm/nvm.sh  ]]; then
    local NODE_MANAGER_COMMAND=(nvm use)
  else
    local NODE_MANAGER_COMMAND=(n auto)
  fi

  # Set package runner
  if [[ -f yarn.lock  ]]; then
    local SCRIPT_RUNNER=(yarn)
  else
    local SCRIPT_RUNNER=(npm run)
  fi

  # Run command based on context
  if [[ -f .ddev/commands/web/npm ]]; then
    ddev "${SCRIPT_RUNNER[@]}" $1 $2
  elif [[ -d .ddev  ]]; then
    ddev exec "${SCRIPT_RUNNER[@]}" $1 $2
  elif [[ -f .nvmrc && -r .nvmrc ]]; then
    "${NODE_MANAGER_COMMAND[@]}" && "${SCRIPT_RUNNER[@]}" $1 $2
  else
    "${SCRIPT_RUNNER[@]}" $1 $2
  fi
}


# NPM
# Run `npm install`
alias ni="packagerun -v && npm install"
nr() {
  packagerun $1 $2 $3 $4
}


# YARN
# Run `yarn` install command
alias yi="packagerun"
yr() {
  packagerun $1 $2 $3 $4
}


# Load local aliases
if [ -f "$HOME/.alias.local" ] ; then
    source "$HOME/.alias.local"
fi
